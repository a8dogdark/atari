PCRSR   = $CB    
    ORG $2000
    ICL 'romram.asm'
    ICL 'load.asm'
    ICL 'pag7.asm'
    ICL 'pag4.asm'
    ICL 'memoria.asm'
    ICL 'hexascii.asm'
LLOAD   = PAG7-LOAD
LAUTO   = PAG4-PAG7
BL4     = LAUTO/128
LAST    = LAUTO-128*BL4
;***********************
;VALORES PRINCIPALES QUE
;REGULA LOS BAUDIOS
;***********************
B00600 	= $05CC		;TIMER  600 BPS
B00800 	= $0458  	;TIMER  800 BPS
B00990 	= $0380  	;TIMER  991 BPS
B01150 	= $0303  	;TIMER 1150 BPS
B01400	= $0278		;TIMER 1400 BPS
;************************
;FUNCION PARA REGULAR LA
;VELOCIDAD AL GRABAR
;************************
;
BAUD.600
	LDA # <B00600
	JSR BAUD.M1
	LDA # >B00600
	JMP BAUD.M2
BAUD.800
	LDA # <B00800
	JSR BAUD.M1
	LDA # >B00800
	JMP BAUD.M2
BAUD.990
	LDA # <B00990
	JSR BAUD.M1
	LDA # >B00990
	JMP BAUD.M2
BAUD.1150
	LDA # <B01150
	JSR BAUD.M1
	LDA # >B01150
	JMP BAUD.M2
BAUD.1400
	LDA # <B01400
	JSR BAUD.M1
	LDA # >B01400
BAUD.M2
	STA $EBA8
	STA $FD46
	STA $FCE1
	RTS
BAUD.M1
	STA $EBA3
	STA $FD41
	STA $FCDC
	RTS
DATALOGO
    .BY $00,$E4,$EF,$E7,$E4
    .BY $E1,$F2,$EB,$00,$00
    .BY $73,$6F,$66,$74,$77
    .BY $61,$72,$65,$73,$00
DATASISTEMA
    .BY $00,$00,$73,$69,$73
    .BY $74,$65,$6D,$61,$73
    .BY $00,$E4,$EF,$E7,$E4
    .BY $E1,$F2,$EB,$00,$00
;****************************
; DISPLAY PANTALLA PRINCIPAL
;****************************
;
DLSPRINCIPAL
    .BYTE $70,$70,$70,$46
    .WORD SHOWPRINCIPAL
    .BYTE $02,$02,$02,$02,$02
    .BYTE $02,$02,$02,$02,$02
    .BYTE $02,$02,$02,$02,$02
    .BYTE $02,$02,$02,$02,$02
    .BYTE $02,$02,$41
    .WORD DLSPRINCIPAL
SHOWPRINCIPAL
    .SB "                    "
    .SB +32,"QRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRE"
    .SB "| COPIADOR MULTIBANCOS-BY DOGDARK 2025 |"
    .SB +32,"ARRRRRRRRRRRRRRRWRRRRRRRRRRRRRRRRRRRRRRD"
    .SB "|MEMORIA        |              "
VEOMEMORIA
    .SB "******* |"
    .SB "|BANCOS         |                   "
VEOBANCOS
    .SB "** |"
    .SB "|PORTB EN USO   |                  $"
VEOPORTB
    .SB "** |"
    .SB "|VELOCIDAD      |          "
VEOSISTEMA
    .SB "600 BAUDIOS |"
    .SB "|BYTES BLOQUES  |            "
VEOBYTESBLOQUES
    .SB "251 BYTES |"
    .SB "|BYTES LEIDOS   |              "
VEOBYTESLEIDOS
    .SB "******* |"
    .SB "|BLOQUES TOTALES|                 "
VEOBLOQUESLEIDOS
    .SB "**** |"
    .SB "|TITULO ARCHIVO | "
TITULOARCHIVO
    .SB "******************** |"
    .SB "|TITULO OPCIONAL| "
TITULOOPCIONAL
    .SB "******************** |"
    .SB "|FUENTE         | "
VEOFUENTE
    .SB "******************** |"
    .SB +32,"ZRRRRRRRRRRRRRRRXRRRRRRRRRRRRRRRRRRRRRRC"
BANQUEOPRINCIPAL
    .SB "**************************************40"
    .SB "**************************************80"
    .SB "*************************************120"
    .SB "*************************************160"
    .SB "*************************************200"
    .SB "*************************************240"
    .SB "*************************************280"
MENSAJESPRINCIPAL
    .SB +128,"                                        "
MENSAJEINICIO
    .SB +128,"SELECT [BYTES BLOQUES]  OPTION [BAUDIOS]"
MENSAJERETURN
    .SB +128,"  PRESIONE RETURN PARA GRABAR ARCHIVO.  "
MENSAJEINICIANDO
    .SB +128,"          INICIANDO GRABACION           "
MENSAJEPAGINA7
    .SB +128,"            GRABANDO PAGINA7            "
MENSAJEPAGINA4
    .SB +128,"            GRABANDO PAGINA4            "
MENSAJELOADER
    .SB +128,"            GRABANDO  LOADER            "
MENSAJEARCHIVO
    .SB +128,"        GRABANDO ARCHIVO A CINTA        "
MENSAJEFINGRABACION
    .SB +128,"         FIN GRABACION DE CINTA         "
SISTEMA
    .BYTE $00
BYTESBLOQUES
    .BYTE $FE
ES131
    .SB "131"
ES254
    .SB "254"
ESSTANDART
    .SB "600"
ESSTAC
    .SB "800"
RY
    .BYTE $00,$00,$00
LEN
    .BYTE $00,$00,$00
TOTALBYTES
    .BYTE $00,$00,$00
TOTALBLOQUES
    .BYTE $00,$00
LENGHT 	= $4000
BAFER	= $4000
ALL
	.BYTE 'D:*.*',$9B
FUENTE
	.BY '                    '
;LIMPIEZAS DE CAMPOS
LIMPIOBANQUEOPRINCIPAL
    LDX #39
    LDA #$00
LIMPIOBANQUEOPRINCIPAL01
    STA BANQUEOPRINCIPAL,X
    STA BANQUEOPRINCIPAL+40,X
    STA BANQUEOPRINCIPAL+80,X
    STA BANQUEOPRINCIPAL+120,X
    STA BANQUEOPRINCIPAL+160,X
    STA BANQUEOPRINCIPAL+200,X
    STA BANQUEOPRINCIPAL+240,X
    DEX
    BPL LIMPIOBANQUEOPRINCIPAL01
    RTS
LIMPIOTITULOS
    LDX #19
    LDA #$00
LIMPIOTITULOS01
    STA VEOFUENTE,X
    STA TITULOARCHIVO,X
    STA TITULOOPCIONAL,X
    STA LOGOPAG7,X
    STA TITULOPAG7,X
    STA TITULOOOPCIONALLOAD,X
    STA TITULOARCHIVOLOAD,X
    DEX
    BPL LIMPIOTITULOS01
    LDA #63
    STA VEOFUENTE
    STA TITULOARCHIVO
    STA TITULOOPCIONAL
    RTS
;CALCULOS DE PANTALLA
ESMEMORIA
    JSR LIMPIOVAL
    LDA MEMORIA
    STA VAL
    LDA MEMORIA+1
    STA VAL+1
    LDA MEMORIA+2
    STA VAL+2
    JSR BIN2BCD
    LDY #7
    LDX #6
ESMEMORIA01
    LDA RESATASCII,Y
    STA VEOMEMORIA,X
    DEY
    DEX
    BPL ESMEMORIA01
    RTS
ESPORTB
    JSR LIMPIOVAL
    LDA $D301
    STA VAL
    JSR BIN3BCD
    LDA HEXATASCII+3
    STA VEOPORTB+1
    LDA HEXATASCII+2
    STA VEOPORTB
    RTS
ESBANCOS
    JSR LIMPIOVAL
    LDA BANKOS
    STA VAL
    JSR BIN2BCD
    LDA RESATASCII+7
    STA VEOBANCOS+1
    LDA RESATASCII+6
    STA VEOBANCOS
    RTS
ESBYTESLEIDOS
    JSR LIMPIOVAL
    LDA TOTALBYTES
    STA VAL
    LDA TOTALBYTES+1
    STA VAL+1
    LDA TOTALBYTES+2
    STA VAL+2
    JSR BIN2BCD
    LDY #7
    LDX #6
ESBYTESLEIDOS01
    LDA RESATASCII,Y
    STA VEOBYTESLEIDOS,X
    DEY
    DEX
    BPL ESBYTESLEIDOS01
    RTS
ESBLOQUESLEIDOS
    JSR LIMPIOVAL
    LDA TOTALBLOQUES
    STA VAL
    LDA TOTALBLOQUES+1
    STA VAL+1
    JSR BIN2BCD
    LDY #7
    LDX #3
ESBLOQUESLEIDOS01
    LDA RESATASCII,Y
    STA VEOBLOQUESLEIDOS,X
    DEY
    DEX
    BPL ESBLOQUESLEIDOS01
    RTS
ESLOGO
    LDX #19
ESLOGO01
    LDA DATALOGO,X
    STA LOGOPAG7,X
    STA SHOWPRINCIPAL,X
    STA LOGOLOAD,X
    DEX
    BPL ESLOGO01
    RTS
;MENSAJES DE PANTALLA
ESCOMIENZO
	LDX #39
ESCOMIENZO01
	LDA MENSAJEINICIO,X
	STA MENSAJESPRINCIPAL,X
	DEX
	BPL ESCOMIENZO01
	RTS
ESRETURN
    LDX #39
ESRETURN01
    LDA MENSAJERETURN,X
    STA MENSAJESPRINCIPAL,X
    DEX
    BPL ESRETURN01
    RTS
ESPAGINA7
    LDX #39
ESPAGINA701
    LDA MENSAJEPAGINA7,X
    STA MENSAJESPRINCIPAL,X
    DEX
    BPL ESPAGINA701
    RTS
ESINICIANDO
    LDX #39
ESINICIANDO01
    LDA MENSAJEINICIANDO,X
    STA MENSAJESPRINCIPAL,X
    DEX
    BPL ESINICIANDO01
    RTS
ESPAGINA4
    LDX #39
ESPAGINA401
    LDA MENSAJEPAGINA4,X
    STA MENSAJESPRINCIPAL,X
    DEX
    BPL ESPAGINA401
    RTS
ESPAGINALOADER
    LDX #39
ESPAGINALOADER01
    LDA MENSAJELOADER,X
    STA MENSAJESPRINCIPAL,X
    DEX
    BPL ESPAGINALOADER01
    RTS
ESGRABANDOARCHIVO
    LDX #39
ESGRABANDOARCHIVO01
    LDA MENSAJEARCHIVO,X
    STA MENSAJESPRINCIPAL,X
    DEX
    BPL ESGRABANDOARCHIVO01
    RTS
RESETER
    JSR LIMPIOBANQUEOPRINCIPAL
    JSR LIMPIOTITULOS
    JSR ESMEMORIA
    JSR ESPORTB
    JSR ESBANCOS
    JSR ESBYTESLEIDOS
    JSR ESBLOQUESLEIDOS
    JSR ESLOGO
	JSR ESCOMIENZO
    RTS
;************************************************
;FUNCION QUE NOS PERMITE PODER CONVERTIR UN BYTE
;EN ATASCII, USADO PARA INGRESO DE TITULOS Y
;FUENTE, NO TIENE LIMITACIONES MAYORES EN LAS
;PULSACIONES DEL TECLADO
;************************************************
ASCINT
	CMP #32
	BCC ADD64
	CMP #96
	BCC SUB32
	CMP #128
	BCC REMAIN
	CMP #160
	BCC ADD64
	CMP #224
	BCC SUB32
	BCS REMAIN
ADD64
	CLC
	ADC #64
	BCC REMAIN
SUB32
	SEC
	SBC #32
REMAIN
	RTS
;************************************************
;RUTINA QUE NOS PERMMITE PODER INGRESAR INFORMA-
;CION A UN CAMPO ESPECIFICO YA ANTES DECLARADO
;MOSTRANDO UN CURSOR EN FORMA PARPADEANTE
;************************************************
;
;************************************************
;CURSOR PARPADEANTE
;************************************************
FLSH
	LDY RY
	LDA (PCRSR),Y
	EOR #63
	STA (PCRSR),Y
	LDA #$10
	STA $021A
	RTS
;************************************************
;ABRE PERIFERICO TECLADO
;************************************************
OPENK
	LDA #255
	STA 764
	LDX #$10
	LDA #$03
	STA $0342,X
	STA $0345,X
	LDA #$26
	STA $0344,X
	LDA #$04
	STA $034A,X
	JSR $E456
	LDA #$07
	STA $0342,X
	LDA #$00
	STA $0348,X
	STA $0349,X
	STA RY
	RTS
;************************************************
;RUTINA QUE LEE LO TECLEADO
;************************************************
RUTLEE
	LDX # <FLSH
	LDY # >FLSH
	LDA #$10
	STX $0228
	STY $0229
	STA $021A
NOGETEC
	JSR OPENK
GETEC
	JSR $E456
	CMP #$7E	
	BNE C0		;ES DIFERENTE A DELETE
	LDY RY
	BEQ GETEC
	LDA #$00
	STA (PCRSR),Y
	LDA #63		;$3F
	DEY
	STA (PCRSR),Y
	DEC RY
	JMP GETEC
C0
	CMP #155	;$9B RETURN
	BEQ C2
	JSR ASCINT
	LDY RY
	STA (PCRSR),Y
	CPY #20		;#14
	BEQ C1
	INC RY
C1
	JMP GETEC
C2
	JSR CLOSE
	LDA #$00
	STA $021A
	LDY RY
	STA (PCRSR),Y
FINRUTLEE
;*******************************
;FUNCION QUE CIERRA PERIFERICOS
;*******************************
CLOSE
	LDX #$10
	LDA #$0C
	STA $0342,X
	JMP $E456
;*****************************
;FUNCION QUE NOS PERMITE ABRIR
;EL PERIFERICO DE LA CASETERA
;ESPERANDO QUE SE PRESIONE
;RETURN
;*****************************
OPENC
	LDA $D40B   ;VCOUNT
	BNE OPENC
	LDA #$FF
	STA 764
?OPENC
	LDA 764
	CMP #$FF
	BEQ ?OPENC
	LDA #$FF
	STA 764
;AUDIO ATENUACION
	JMP $FD40
;******************************
;GENERA UNA PAUSA DE X SEGUNDOS
;YA PREDEFINIDOS ANTERIORMENTE
;EN UNA VARIABLE X
;******************************
PAUSITA
	STX $021C
?PAUSITA
	LDX $021C
	BNE ?PAUSITA
	RTS
;**************************
;FUNCION QUE INICIA EL SIOV
;PARA GRABAR DATA EN LA 
;CINTA
;**************************
INITSIOV
	LDY #$0B
?INITSIOV
	LDA DNHP,Y
	STA $0300,Y
	DEY
	BPL ?INITSIOV
	LDA #$00
	STA 77		;$4D
	RTS
DNHP
	.BYTE $60,$00,$52,$80
	.WORD BANQUEOPRINCIPAL
	.BYTE $35,$00
	.WORD $0100
	.BYTE $00,$80
;************************************************
; DEFINICION DEL DISPLAY
; PARA DIRECTORIO
;************************************************
?DIR
	.BYTE $70,$70,$70,$46
	.WORD ???DIR
	.BYTE $70,$70,$70,$02,$02,$02,$02,$02,$02,$02
	.BYTE $02,$02,$41
	.WORD ?DIR
;************************************************
;VALORES PARA PANTALLA DIRECTORIO
;************************************************
???DIR
	.SB "     DIRECTORIO     "
??DIR
:10	.SB "                                        "
;************************************************
;GENERA UNA LIMPIEZA TOTAL DEL DISPLAY DEL
;DIRECTORIO
;************************************************
CLS
	LDX # <??DIR
	LDY # >??DIR
	STX PCRSR
	STY PCRSR+1
	LDY #$00
	LDX #$00
?CLS
	LDA #$00
	STA (PCRSR),Y
	INY
	BNE ??CLS
	INX
	INC PCRSR+1
??CLS
	CPY #104	;$68
	BNE ?CLS
	CPX #$01
	BNE ?CLS
	RTS
;************************************************
;FUNCION QUE ABRE PERIFERICOS
;************************************************
OPEN
	LDX #$10
	LDA #$03
	STA $0342,X
	LDA # <FUENTE
	STA $0344,X
	LDA # >FUENTE
	STA $0345,X
	LDA #$04
	STA $034A,X
	LDA #$80
	STA $034B,X
	JSR $E456
	DEY
	BNE DIR
	RTS
;************************************************
;MUESTRA EL DIRECTORIO EN PANTALLA
;************************************************
DIR
	JSR CLOSE
	JSR CLS
	LDX # <?DIR
	LDY # >?DIR
	STX $0230
	STY $0231
	LDX # <??DIR
	LDY # >??DIR
	STX PCRSR
	STY PCRSR+1
	
;	
	LDX #$10
	LDA #$03
	STA $0342,X
	LDA # <ALL
	STA $0344,X
	LDA # >ALL
	STA $0345,X
	LDA #$06
	STA $034A,X
	LDA #$00
	STA $034B,X
	JSR $E456
	LDA #$07
	STA $0342,X
	LDA #$00
	STA $0348,X
	STA $0349,X
	STA RY
	STA RY+1
LEDIR
	JSR $E456
	BMI ?EXIT
	CMP #155
	BEQ EXIT
	JSR ASCINT
	LDY RY
	STA (PCRSR),Y
	INC RY
	BNE F0
	INC PCRSR+1
	INC RY+1
F0
	LDY RY+1
	CPY #$01
	BNE F1
	LDY RY
	CPY #104	;$68
	BCC F1
	JSR PAUSE
	INC RY
F1
	JMP LEDIR
EXIT
	INC RY
	INC RY
	INC RY
	JMP LEDIR
?EXIT
	JSR CLOSE
	JSR PAUSE
	JSR CLS
	PLA
	PLA
	JMP START
PAUSE
	LDA 53279
	CMP #$06
	BNE PAUSE
	JSR CLS
	LDA #$00
	STA RY
	STA RY+1
	LDA # <??DIR
	STA PCRSR
	LDA # >??DIR
	STA PCRSR+1
	LDX #$10
	RTS
;************************************************
;FUNCION QUE PERMITE PODER REALIZAR CAMBIOS
;DE BANCOS DE MEMORIA EN UNA CARGA
;************************************************
CAMBIOBANCO
	LDX RY
    CPX BANKOS
	BEQ	FINCAMBIOBANCO
    BCS ERRORBANQUEO
FINCAMBIOBANCO	
	LDA TABMEMBANKS,X
    STA $D301
	INX
	STX RY
	RTS
;************************************************
;EN CASO QUE SOBREPASE LA CANTIDAD DE BANCOS
;ENCONTRADOS NOS REDIRECCIONA A MOSTRAR EL
;DIRECTORIO EN PANTALLA
;************************************************
ERRORBANQUEO
	JMP DIR
;************************************************
;FUNCION QUE NOS PERMITE PODER REALIZAR CARGA
;DE DATOS EN MEMORIA
;************************************************
FGET
    LDY #$00
	STY LEN
	STY LEN+1
	STY LEN+2
	INY
	STY RY
	JSR LIMPIOVAL
LOPFGET
	JSR CAMBIOBANCO	;REALIZO CAMBIO DE BANCO
    JSR ESPORTB		;MUESTRO EL PORTB EN PANTALLA
	LDX #$10
	LDA #$07
	STA $0342,X
	LDA # <BAFER	;SE CARGA EN $4000
	STA $0344,X
	LDA # >BAFER
	STA $0345,X
	LDA # <LENGHT	;CANTIDAD DE BYTES QUE SE CARGAN
	STA $0348,X
	LDA # >LENGHT
	STA $0349,X
??FGET
	JSR $E456
;************************************************
;REALIZO SUMA DE BYTES POR BANCO Y LO GUARDO EN
;LA VARIABLE VOLATIL LEN
;************************************************
	CLC
	LDA TOTALBYTES
	ADC $0348,X
	STA TOTALBYTES
	STA LEN
	LDA TOTALBYTES+1
	ADC $0349,X
	STA TOTALBYTES+1
	STA LEN+1
	LDA TOTALBYTES+2
	ADC #$00
	STA TOTALBYTES+2
	STA LEN+2
	LDA $0349,X
	CMP # >LENGHT
	BEQ LOPFGET
	CPY #136	;$88
	BEQ ?FGET
	JSR CLOSE
	JSR CLS
	LDX #$00
	TXS
	JMP START
?FGET
	JSR ESBYTESLEIDOS
	JSR PONBLOQUES
    RTS
PONBLOQUES
	SEC
	LDA LEN
	SBC BYTESBLOQUES
	STA LEN
	LDA LEN+1
	SBC #0
	STA LEN+1
	LDA LEN+2
	SBC #0
	STA LEN+2
;SUMO BLOQUES
	CLC
	LDA TOTALBLOQUES
	ADC #$01
	STA TOTALBLOQUES
	LDA TOTALBLOQUES+1
	ADC #$00
	STA TOTALBLOQUES+1

	LDA LEN+2
	CMP #$00
	BNE PONBLOQUES
	LDA LEN+1
	CMP #$00
	BNE PONBLOQUES

	CLC
	LDA TOTALBLOQUES
	ADC #$01
	STA TOTALBLOQUES
	LDA TOTALBLOQUES+1
	ADC #$00
	STA TOTALBLOQUES+1
	JSR ESBLOQUESLEIDOS
	LDX #3
PONBLOQUES02
	LDA VEOBLOQUESLEIDOS,X
	STA BLOQUESLOADER,X
	DEX
	BPL PONBLOQUES02
	RTS
;********************
;GRABACION EN CINTA
;********************
AUTORUN
    JSR ESPAGINA7
    JSR BAUD.600
	LDX # <PAG7
	LDY # >PAG7
	LDA #$02	;02 graba 3 bloques en cinta
	STX MVPG7+1
	STY MVPG7+2
	STA RY	;@BL4
FALTA
	JSR INITSIOV
	LDX #<BANQUEOPRINCIPAL
	LDY #>BANQUEOPRINCIPAL
	STX $0304
	STY $0305
	LDX #131	; $83
	LDY #$00	; $00
	STX $0308
	STY $0309
	LDY #$00
	TYA
CLBUF
	STA BANQUEOPRINCIPAL,Y
	INY
	CPY #131	;$83
	BNE CLBUF
	LDA #$55
	STA BANQUEOPRINCIPAL
	STA BANQUEOPRINCIPAL+1
	LDX #$FC
	LDY #127	;$7F
	DEC RY	;@BL4
	BPL NOFIN
	LDX #$FA
	LDY #LAST
	STY BANQUEOPRINCIPAL+130
NOFIN
	STX BANQUEOPRINCIPAL+2
MVPG7
	LDA PAG7,Y
	STA BANQUEOPRINCIPAL+3,Y
	DEY
	BPL MVPG7
	JSR $E459
	CLC
	LDA MVPG7+1
	ADC #$80
	STA MVPG7+1
	LDA MVPG7+2
	ADC #$00
	STA MVPG7+2
	LDA RY
	BPL FALTA
    RTS
GAUTO
    JSR ESLOGO
    JSR ESINICIANDO
    LDA #$FF
    STA $D301
    JSR AUTORUN
    JSR INITSIOV
	JSR LIMPIOBANQUEOPRINCIPAL
;GRABAMOS BLOQUE 4
    JSR ESPAGINA4
	LDX # <131		;GRABA EL 4 BLOQUE CON LA INFORMACION
	LDY # >131		;QUE CARGARA EL LOADER 
	STX $0308
	STY $0309
	LDX # <PAG4
	LDY # >PAG4
	STX $0304
	STY $0305
	JSR $E459
	LDX #$40		;GENERAMOS UNA PEQUEÑA PAUSA PARA QUE SE
	JSR PAUSITA		;ACTIVE LA ROM A RAM DE LA PAGINA7
;GRABAMOS EL LOADER
    JSR INITSIOV
    JSR ESPAGINALOADER
    LDX # <LARGOLOAD	;GRABAMOS EL LOADER EN PANTALLA
	LDY # >LARGOLOAD
	STX $0308
	STY $0309
	LDX # <LOAD
	LDY # >LOAD
	STX $0304
	STY $0305
	JSR $E459
    LDX #$40		;GENERAMOS UNA PEQUEÑA PAUSA PARA QUE SE
	JSR PAUSITA		;ACTIVE EL LOAD
    JSR ESGRABANDOARCHIVO
    RTS
DOS
    JMP ($0C)
@START
    JSR DOS
START
    JSR RESETER
    LDX # <DLSPRINCIPAL
    LDY # >DLSPRINCIPAL
    STX $0230   ;SDLSTL
    STY $0231   ;SDLSTH
    LDA #$60
    STA 710
    STA 712
;INGRESAMOS TITULO ARCHIVO
    LDX #<TITULOARCHIVO
    LDY #>TITULOARCHIVO
    STX PCRSR
    STY PCRSR+1
    JSR RUTLEE
    TYA
    BEQ NOTITLE
	LDA RY
    LSR 
	STA RY+1
	LDA #10
	SEC
	SBC RY+1
	STA RY+1
	LDX #$00
	LDY RY+1
WRITE
    LDA TITULOARCHIVO,X
    STA TITULOARCHIVOLOAD,Y
    STA TITULOPAG7,Y
	INY
	INX
	CPX RY
	BNE WRITE
;INGRESAMOS TITULO OPCIONAL
NOTITLE
    LDX #<TITULOOPCIONAL
    LDY #>TITULOOPCIONAL
    STX PCRSR
    STY PCRSR+1
    JSR RUTLEE
	TYA
    BEQ NOTITLE02
	LDA RY
    LSR 
	STA RY+1
	LDA #10
	SEC
	SBC RY+1
	STA RY+1
	LDX #$00
	LDY RY+1
WRITE02
    LDA TITULOOPCIONAL,X
    STA TITULOOOPCIONALLOAD,Y
	INY
	INX
	CPX RY
	BNE WRITE02
;INGRESAMOS TITULO OPCIONAL
NOTITLE02
;INGRESAMOS LA FUENTE PARA CARGAR
    LDX #<VEOFUENTE
    LDY #>VEOFUENTE
    STX PCRSR
    STY PCRSR+1
    JSR RUTLEE
    LDY RY
	CPY #1
	BEQ OPENPER
	LDY #19
CONV
	LDA VEOFUENTE,Y
	BEQ ?REMAIN
	AND #$7F
	CMP #64
	BCC ADD32
	CMP #96
	BCC SUB64
	BCS ?REMAIN
ADD32
	CLC
	ADC #32
	BCC OKLET
SUB64
	SEC
	SBC #64
?REMAIN
	LDA #$9B
OKLET
	STA FUENTE,Y
	DEY
	BPL CONV
;REDIRECCIONO PARA CARGA DE ARCHIVO
	JSR CLOSE
	JSR OPEN
;EN MEMORIA	
    JSR FGET
OPENPER
;GRABO ARCHIVO EN CINTA
    JSR ESRETURN
    JSR CLOSE
;DESHABILITAMOS EL SISTEMA
;OPERATIVO
    LDA #$FE   ;ORIGINAL $FF
    STA $D301
;DEJAMOS EL IRG INICIAL EN 15 SEGUNDOS
    LDA #$03
    STA $FE8D
    LDA #$02
    STA $FE8E
    LDA #$86    ;DURACION DEL TIME DEL IRG 15 SEGUNDOS
    STA $FE8F
    LDA #$8A
    STA $FE90

;ABRIO CIO PARA CASETE
    JSR OPENC
    JSR GAUTO

;CIERRO GRABACION
    LDX #$3C		
	LDA #$03		
	STA 53775	;$d20f
	STX $D302
    LDA $FF
    STA $D301   ;PORTB
    LDA #$02
    STA 710
    STA 712
    JMP *
INICIO
    JSR ROMRAM
    JSR MEM
    LDX #<@START
    LDY #>@START
    LDA #$03
    STX $02     
    STY $03
    STA $09
    LDY #$FF    
    STY $08     
    INY 
    STY $0244
    JMP START
    RUN INICIO